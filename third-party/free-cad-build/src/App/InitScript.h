const char FreeCADInit[] ="# FreeCAD init module\n"
"# (c) 2001 Jürgen Riegel\n"
"#\n"
"# Gathering all the information to start FreeCAD\n"
"# This is the second one of three init scripts, the third one\n"
"# runs when the gui is up\n"
"\n"
"#***************************************************************************\n"
"#*   (c) Jürgen Riegel (juergen.riegel@web.de) 2002                        *\n"
"#*                                                                         *\n"
"#*   This file is part of the FreeCAD CAx development system.              *\n"
"#*                                                                         *\n"
"#*   This program is free software; you can redistribute it and/or modify  *\n"
"#*   it under the terms of the GNU General Public License (GPL)            *\n"
"#*   as published by the Free Software Foundation; either version 2 of     *\n"
"#*   the License, or (at your option) any later version.                   *\n"
"#*   for detail see the LICENCE text file.                                 *\n"
"#*                                                                         *\n"
"#*   FreeCAD is distributed in the hope that it will be useful,            *\n"
"#*   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n"
"#*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n"
"#*   GNU Library General Public License for more details.                  *\n"
"#*                                                                         *\n"
"#*   You should have received a copy of the GNU Library General Public     *\n"
"#*   License along with FreeCAD; if not, write to the Free Software        *\n"
"#*   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  *\n"
"#*   USA                                                                   *\n"
"#*                                                                         *\n"
"#*   Juergen Riegel 2002                                                   *\n"
"#***************************************************************************/\n"
"\n"
"\n"
"# imports the one and only\n"
"import FreeCAD\n"
"\n"
"\n"
"def InitApplications():\n"
"	try:\n"
"		import sys,os\n"
"	except:\n"
"		FreeCAD.PrintError(\"\\n\\nSeems the python standard libs are not installed, bailing out!\\n\\n\")\n"
"		raise\n"
"	# Checking on FreeCAD module path ++++++++++++++++++++++++++++++++++++++++++\n"
"	ModDir = FreeCAD.getHomePath()+\'Mod\'\n"
"	ModDir = os.path.realpath(ModDir)\n"
"	BinDir = FreeCAD.getHomePath()+\'bin\'\n"
"	BinDir = os.path.realpath(BinDir)\n"
"	LibDir = FreeCAD.getHomePath()+\'lib\'\n"
"	LibDir = os.path.realpath(LibDir)\n"
"	AddPath = FreeCAD.ConfigGet(\"AdditionalModulePaths\").split(\";\")\n"
"	HomeMod = FreeCAD.ConfigGet(\"UserAppData\")+\"Mod\"\n"
"	HomeMod = os.path.realpath(HomeMod)\n"
"	MacroDir = FreeCAD.ParamGet(\"User parameter:BaseApp/Preferences/Macro\").GetString(\"MacroPath\")\n"
"	MacroMod = os.path.realpath(MacroDir+\"/Mod\")\n"
"	ModPar = FreeCAD.ParamGet(\"System parameter:Modules\")\n"
"\n"
"	#print FreeCAD.getHomePath()\n"
"	if os.path.isdir(FreeCAD.getHomePath()+\'src\\\\Tools\'):\n"
"		sys.path.append(FreeCAD.getHomePath()+\'src\\\\Tools\')\n"
"	# Searching for module dirs +++++++++++++++++++++++++++++++++++++++++++++++++++\n"
"	# Use dict to handle duplicated module names\n"
"	ModDict = {}\n"
"	if os.path.isdir(ModDir):\n"
"		ModDirs = os.listdir(ModDir)\n"
"		for i in ModDirs: ModDict[i.lower()] = os.path.join(ModDir,i)\n"
"	else:\n"
"		Wrn (\"No modules found in \" + ModDir + \"\\n\")\n"
"	# Search for additional modules in the home directory\n"
"	if os.path.isdir(HomeMod):\n"
"		HomeMods = os.listdir(HomeMod)\n"
"		for i in HomeMods: ModDict[i.lower()] = os.path.join(HomeMod,i)\n"
"	# Search for additional modules in the macro directory\n"
"	if os.path.isdir(MacroMod):\n"
"		MacroMods = os.listdir(MacroMod)\n"
"		for i in MacroMods:\n"
"			key = i.lower()\n"
"			if key not in ModDict: ModDict[key] = os.path.join(MacroMod,i)\n"
"	# Search for additional modules in command line\n"
"	for i in AddPath:\n"
"		if os.path.isdir(i): ModDict[i] = i\n"
"	#AddModPaths = App.ParamGet(\"System parameter:AdditionalModulePaths\")\n"
"	#Err( AddModPaths)\n"
"	# add also this path so that all modules search for libraries\n"
"	# they depend on first here\n"
"	PathExtension = BinDir + os.pathsep\n"
"	# prepend all module paths to Python search path\n"
"	Log(\'Init:   Searching for modules...\\n\')\n"
"	FreeCAD.__path__ = ModDict.values()\n"
"	for Dir in ModDict.values():\n"
"		if ((Dir != \'\') & (Dir != \'CVS\') & (Dir != \'__init__.py\')):\n"
"			ModGrp = ModPar.GetGroup(Dir)\n"
"			sys.path.insert(0,Dir)\n"
"			PathExtension += Dir + os.pathsep\n"
"			InstallFile = os.path.join(Dir,\"Init.py\")\n"
"			if (os.path.exists(InstallFile)):\n"
"				try:\n"
"					execfile(InstallFile)\n"
"				except Exception, inst:\n"
"					Log(\'Init:      Initializing \' + Dir + \'... failed\\n\')\n"
"					Err(\'During initialization the error \' + str(inst) + \' occurred in \' + InstallFile + \'\\n\')\n"
"				else:\n"
"					Log(\'Init:      Initializing \' + Dir + \'... done\\n\')\n"
"			else:\n"
"				Log(\'Init:      Initializing \' + Dir + \'(Init.py not found)... ignore\\n\')\n"
"	sys.path.insert(0,LibDir)\n"
"	sys.path.insert(0,ModDir)\n"
"	Log(\"Using \"+ModDir+\" as module path!\\n\")\n"
"	# new paths must be prepended to avoid to load a wrong version of a library\n"
"	os.environ[\"PATH\"] = PathExtension + os.environ[\"PATH\"]\n"
"	path = os.environ[\"PATH\"].split(os.pathsep)\n"
"	Log(\"System path after init:\\n\")\n"
"	for i in path:\n"
"		Log(\"   \" + i + \"\\n\")\n"
"	# add MacroDir to path (RFE #0000504)\n"
"	sys.path.append(MacroDir)\n"
"	# add special path for MacOSX (bug #0000307)\n"
"	import platform\n"
"	if len(platform.mac_ver()[0]) > 0:\n"
"		sys.path.append(os.path.expanduser(\'~/Library/Application Support/FreeCAD/Mod\'))\n"
"\n"
"# some often used shortcuts (for lazy people like me ;-)\n"
"App = FreeCAD\n"
"Log = FreeCAD.Console.PrintLog\n"
"Msg = FreeCAD.Console.PrintMessage\n"
"Err = FreeCAD.Console.PrintError\n"
"Wrn = FreeCAD.Console.PrintWarning\n"
"\n"
"Log (\'Init: starting App::FreeCADInit.py\\n\')\n"
"\n"
"# init every application by importing Init.py\n"
"InitApplications()\n"
"\n"
"FreeCAD.EndingAdd(\"FreeCAD document (*.FCStd)\",\"FreeCAD\")\n"
"\n"
"# set to no gui, is overwritten by InitGui\n"
"App.GuiUp = 0\n"
"\n"
"# clean up namespace\n"
"del(InitApplications)\n"
"\n"
"Log (\'Init: App::FreeCADInit.py done\\n\')\n"
"\n"
"\n"
"\n"
"\n"
;


